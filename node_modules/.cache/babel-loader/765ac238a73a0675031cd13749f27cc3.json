{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\"; // import \"../style/SignIn.css\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  let navigate = useNavigate(); //   const MyTextInput = ({ label, ...props }) => {\n  //     // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  //     // which we can spread on <input>. We can use field meta to show an error\n  //     // message if the field is invalid and it has been touched (i.e. visited)\n  //     const [field, meta] = useField(props);\n  //     return (\n  //       <div class=\"d-flex flex-row align-items-center mb-4\">\n  //         <div class=\"form-outline flex-fill mb-0\">\n  //           <label class=\"form-label\" htmlFor={props.id || props.name}>\n  //             {label}\n  //           </label>\n  //           <input\n  //             className=\"text-input\"\n  //             class=\"form-control\"\n  //             {...field}\n  //             {...props}\n  //           />\n  //           {meta.touched && meta.error ? (\n  //             <div className=\"error\">{meta.error}</div>\n  //           ) : null}\n  //         </div>\n  //       </div>\n  //     );\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: \"asd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/SignIn.js"],"names":["Formik","Form","useField","Yup","useNavigate","React","SignIn","navigate"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,QAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAIC,QAAQ,GAAGH,WAAW,EAA1B,CAD+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuFD;;GAlHuBE,M;UACPF,W;;;KADOE,M","sourcesContent":["import { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\n// import \"../style/SignIn.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\n\nexport default function SignIn() {\n  let navigate = useNavigate();\n\n  //   const MyTextInput = ({ label, ...props }) => {\n  //     // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  //     // which we can spread on <input>. We can use field meta to show an error\n  //     // message if the field is invalid and it has been touched (i.e. visited)\n  //     const [field, meta] = useField(props);\n  //     return (\n  //       <div class=\"d-flex flex-row align-items-center mb-4\">\n  //         <div class=\"form-outline flex-fill mb-0\">\n  //           <label class=\"form-label\" htmlFor={props.id || props.name}>\n  //             {label}\n  //           </label>\n  //           <input\n  //             className=\"text-input\"\n  //             class=\"form-control\"\n  //             {...field}\n  //             {...props}\n  //           />\n  //           {meta.touched && meta.error ? (\n  //             <div className=\"error\">{meta.error}</div>\n  //           ) : null}\n  //         </div>\n  //       </div>\n  //     );\n  //   };\n  return (\n    <div className=\"screen\">\n      asd\n      {/* <section class=\"vh-100\">\n        <div class=\"container h-100\">\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-lg-12 col-xl-11\">\n              <div class=\"card text-black\">\n                <div class=\"card-body p-md-3\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                      <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                        Sign in\n                      </p>\n                      <Formik\n                        class=\"mx-1 mx-md-4\"\n                        initialValues={{\n                          userName: \"\",\n                          password: \"\",\n                        }}\n                        // Check validation of each attribute\n                        validationSchema={Yup.object({\n                          userName: Yup.string()\n                            .max(40, \"Must be 15 characters or less\")\n                            .required(\"Required\"),\n                          password: Yup.string().required(\"Required\"),\n                        })}\n                        // onSubmit={(values) => {\n                        //   signIn(values.userName, values.password);\n                        //   console.log(values);\n                        // }}\n                      >\n                        <Form>\n                          <MyTextInput\n                            label=\"User Name\"\n                            name=\"userName\"\n                            type=\"text\"\n                            placeholder=\"Dat\"\n                          />\n\n                          <MyTextInput\n                            label=\"Password\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"*********\"\n                          />\n                          <div class=\"forgot\">\n                            <div class=\"col\">\n                              <a\n                                style={{ fontSize: 16, textDecoration: \"none\" }}\n                                href=\"/forgot-password\"\n                              >\n                                Forgot password ?\n                              </a>\n                            </div>\n                            <br />\n                            <button type=\"submit\" className=\"signinbutton\">\n                              Sign in\n                            </button>\n\n                            <p className=\"signin\">\n                              <p class=\" text-muted\">\n                                Don't have an account ?{\" \"}\n                                <a\n                                  href=\"\"\n                                  class=\"button\"\n                                  //   onClick={() => {\n                                  //     navigate(\"/signup\");\n                                  //   }}\n                                >\n                                  Sign up\n                                </a>\n                              </p>\n                            </p>\n                          </div>\n                        </Form>\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}