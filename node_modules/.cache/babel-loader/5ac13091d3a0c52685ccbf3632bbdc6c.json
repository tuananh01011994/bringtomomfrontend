{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employer/AddJobForEmployer.js\",\n    _s3 = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\nimport \"../style/Addproduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddJobForEmployer() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [data, setData] = useState([]);\n  const [userName, setUserName] = useState(Cache.getItem(\"userName\"));\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const endPoint = \"http://localhost:8080/jobcategory\";\n  const endPoint1 = \"https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/\";\n  let navigate = useNavigate();\n  useEffect(() => {\n    fetch(endPoint, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n\n  const addProduct = (productName, brand, price, subcategory_id, product_detail, date_created, quantity) => {\n    onFileUpload();\n    console.log(userName);\n    fetch(endPoint1, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        product_name: productName,\n        subcategory_id: subcategory_id,\n        brand: brand,\n        img_url: \"https://ecommercebucket222553-dev.s3.ap-southeast-1.amazonaws.com/public/\" + selectedFile.name,\n        quantity: quantity,\n        price: price,\n        product_detail: product_detail,\n        date_created: date_created,\n        user_name: userName\n      })\n    }).then(data => data.json()).then(response => {\n      if (response.status === 500) {\n        alert(\"Product exists\");\n      }\n    }); // navigate(\"/list-of-seller-product/\");\n  };\n\n  const MyTextInput = _ref => {\n    _s();\n\n    let {\n      label,\n      ...props\n    } = _ref;\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: props.id || props.name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          class: \"form-control\",\n          ...field,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  const MySelect = _ref2 => {\n    _s2();\n\n    let {\n      label,\n      ...props\n    } = _ref2;\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id || props.name,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-control\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s2(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \".container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 50\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(HeaderListOfSellerProductComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add a product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: \"\",\n          price: 0,\n          brand: \"\",\n          quantity: 0,\n          product_detail: \"\"\n        },\n        validationSchema: Yup.object({\n          productName: Yup.string().max(50, \"Must be 50 characters or less\").required(\"Required\"),\n          productName: Yup.string().required(\"Required\"),\n          price: Yup.number().min(1, \"At least 1 USD\").required(\"Invalid\"),\n          quantity: Yup.number().min(1, \"At least 1 \").required(\"Invalid\"),\n          brand: Yup.string().required(\"Required\"),\n          product_detail: Yup.string().required(\"Required\")\n        }),\n        onSubmit: values => {\n          var today = new Date(),\n              date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n          addProduct(values.productName, values.brand, values.price, values.subcategory_id, values.product_detail, date.toString(), values.quantity);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Subcategory Type\",\n            name: \"subcategory_id\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select a sub-category type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), data.map(subCategory => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCategory.subcategory_id,\n              children: subCategory.subcategory_name\n            }, subCategory.subcategory_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Product Name\",\n            name: \"productName\",\n            type: \"text\",\n            placeholder: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Brand\",\n            name: \"brand\",\n            type: \"text\",\n            placeholder: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Price\",\n            name: \"price\",\n            type: \"number\",\n            placeholder: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Quantity\",\n            name: \"quantity\",\n            type: \"number\",\n            placeholder: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Description\",\n            name: \"product_detail\",\n            type: \"text\",\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                marginTop: 5\n              },\n              type: \"file\",\n              onChange: e => setSelectedFile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-grid gap-2 d-md-flex justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"saveaddproduct\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(AddJobForEmployer, \"4tFdsB7TI1T4OUPVDbO/zGGlRu4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddJobForEmployer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJobForEmployer\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employer/AddJobForEmployer.js"],"names":["Formik","Form","useField","Yup","React","useState","useEffect","useNavigate","useLocation","Link","AddJobForEmployer","data","setData","userName","setUserName","Cache","getItem","selectedFile","setSelectedFile","status","setStatus","endPoint","endPoint1","navigate","fetch","method","headers","then","response","json","console","log","addProduct","productName","brand","price","subcategory_id","product_detail","date_created","quantity","onFileUpload","body","JSON","stringify","product_name","img_url","name","user_name","alert","MyTextInput","label","props","field","meta","id","touched","error","MySelect","marginBottom","flex","justifyContent","textAlign","object","string","max","required","number","min","values","today","Date","date","getFullYear","getMonth","getDate","toString","map","subCategory","subcategory_name","marginTop","e","target","files"],"mappings":"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","sourcesContent":["import { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\n\nimport \"../style/Addproduct.css\";\n\nexport default function AddJobForEmployer() {\n  const [data, setData] = useState([]);\n  const [userName, setUserName] = useState(Cache.getItem(\"userName\"));\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const endPoint = \"http://localhost:8080/jobcategory\";\n  const endPoint1 =\n    \"https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/\";\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(endPoint, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        console.log(data);\n      });\n  }, []);\n\n  const addProduct = (\n    productName,\n    brand,\n    price,\n    subcategory_id,\n    product_detail,\n    date_created,\n    quantity\n  ) => {\n    onFileUpload();\n    console.log(userName);\n    fetch(endPoint1, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        product_name: productName,\n        subcategory_id: subcategory_id,\n        brand: brand,\n        img_url:\n          \"https://ecommercebucket222553-dev.s3.ap-southeast-1.amazonaws.com/public/\" +\n          selectedFile.name,\n        quantity: quantity,\n        price: price,\n        product_detail: product_detail,\n        date_created: date_created,\n        user_name: userName,\n      }),\n    })\n      .then((data) => data.json())\n      .then((response) => {\n        if (response.status === 500) {\n          alert(\"Product exists\");\n        }\n      });\n    // navigate(\"/list-of-seller-product/\");\n  };\n\n  const MyTextInput = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <div class=\"mb-3 mt-3\">\n          <label htmlFor={props.id || props.name}>{label}</label>\n          <input\n            className=\"text-input\"\n            class=\"form-control\"\n            {...field}\n            {...props}\n          />\n          {meta.touched && meta.error ? (\n            <div className=\"error\">{meta.error}</div>\n          ) : null}\n        </div>\n      </>\n    );\n  };\n\n  const MySelect = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <div>\n        <label htmlFor={props.id || props.name}>{label}</label>\n        <select class=\"form-control\" {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\".container-fluid\">\n      <div style={{ marginBottom: 50 }}>\n        {\" \"}\n        <HeaderListOfSellerProductComponent />\n      </div>\n      <div class=\"container mt-3\">\n        <div\n          style={{\n            flex: 1,\n            justifyContent: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <h1>Add a product</h1>\n        </div>\n        <Formik\n          initialValues={{\n            productName: \"\",\n            price: 0,\n            brand: \"\",\n            quantity: 0,\n            product_detail: \"\",\n          }}\n          validationSchema={Yup.object({\n            productName: Yup.string()\n              .max(50, \"Must be 50 characters or less\")\n              .required(\"Required\"),\n            productName: Yup.string().required(\"Required\"),\n            price: Yup.number().min(1, \"At least 1 USD\").required(\"Invalid\"),\n            quantity: Yup.number().min(1, \"At least 1 \").required(\"Invalid\"),\n            brand: Yup.string().required(\"Required\"),\n            product_detail: Yup.string().required(\"Required\"),\n          })}\n          onSubmit={(values) => {\n            var today = new Date(),\n              date =\n                today.getFullYear() +\n                \"-\" +\n                (today.getMonth() + 1) +\n                \"-\" +\n                today.getDate();\n            addProduct(\n              values.productName,\n              values.brand,\n              values.price,\n              values.subcategory_id,\n              values.product_detail,\n              date.toString(),\n              values.quantity\n            );\n          }}\n        >\n          <Form>\n            <MySelect label=\"Subcategory Type\" name=\"subcategory_id\">\n              <option>Select a sub-category type</option>\n              {data.map((subCategory) => (\n                <option\n                  key={subCategory.subcategory_id}\n                  value={subCategory.subcategory_id}\n                >\n                  {subCategory.subcategory_name}\n                </option>\n              ))}\n            </MySelect>\n            <br />\n\n            <MyTextInput\n              label=\"Product Name\"\n              name=\"productName\"\n              type=\"text\"\n              placeholder=\"Product Name\"\n            />\n\n            <MyTextInput\n              label=\"Brand\"\n              name=\"brand\"\n              type=\"text\"\n              placeholder=\"Brand\"\n            />\n            <MyTextInput\n              label=\"Price\"\n              name=\"price\"\n              type=\"number\"\n              placeholder=\"Price\"\n            />\n\n            <MyTextInput\n              label=\"Quantity\"\n              name=\"quantity\"\n              type=\"number\"\n              placeholder=\"Quantity\"\n            />\n\n            <MyTextInput\n              label=\"Description\"\n              name=\"product_detail\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n            <div> Image</div>\n            <div>\n              <input\n                style={{ marginTop: 5 }}\n                type=\"file\"\n                onChange={(e) => setSelectedFile(e.target.files[0])}\n              />\n            </div>\n            <br />\n            <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\">\n              <button type=\"submit\" className=\"saveaddproduct\">\n                Save\n              </button>\n            </div>\n          </Form>\n        </Formik>\n      </div>{\" \"}\n      <br /> <br />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}