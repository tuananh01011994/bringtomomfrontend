{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employer/SignUpForEmployer.js\",\n    _s2 = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../style/SignUp.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForEmployer() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let navigate = useNavigate();\n  const [user, setUser] = useState();\n\n  const MyTextInput = _ref => {\n    _s();\n\n    let {\n      label,\n      ...props\n    } = _ref;\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex flex-row align-items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-outline flex-fill mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-label\",\n          htmlFor: props.id || props.name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          class: \"form-control\",\n          ...field,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  const handleLogout = () => {\n    // setUser({});\n    // setUsername(\"\");\n    // setPassword(\"\");\n    localStorage.clear();\n    navigate(\"/\");\n  };\n\n  useEffect(() => getUserID(), []);\n\n  const getUserID = async () => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    console.log(\"User id... :\" + loggedInUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row d-flex justify-content-center align-items-center h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-12 col-xl-11\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card text-black\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body p-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"row justify-content-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\",\n                      children: \"Sign up for employer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                      class: \"mx-1 mx-md-4\",\n                      initialValues: {\n                        companytName: \"\",\n                        password: \"\",\n                        phone: \"\",\n                        address: \"\"\n                      } // Check validation of each attribute\n                      ,\n                      validationSchema: Yup.object({\n                        companyName: Yup.string().max(30, \"Must be 30 characters or less\").required(\"Required\"),\n                        phone: Yup.string().max(25, \"Must be 25 characters or less\").required(\"Required\"),\n                        password: Yup.string().required(\"Required\"),\n                        address: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\")\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Phone\",\n                          name: \"phone\",\n                          type: \"string\",\n                          placeholder: \"090123123\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Password\",\n                          name: \"password\",\n                          type: \"password\",\n                          placeholder: \"*********\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 92,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Company Name\",\n                          name: \"companyName\",\n                          type: \"text\",\n                          placeholder: \"KMS Technology\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Address\",\n                          name: \"address\",\n                          type: \"text\",\n                          placeholder: \"A1 Nguyen Van Troi Street, Dictrict 3, HCM City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 105,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"submit\",\n                          className: \"signupbutton\",\n                          children: \"Sign up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"bottom\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            class: \" text-muted\",\n                            children: [\"Already have account ?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"\",\n                              class: \"button\",\n                              onClick: () => {\n                                navigate(\"/\");\n                              },\n                              children: \"Sign in\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 119,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 117,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleLogout,\n                    children: \"logout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SignUpForEmployer, \"4a3m5/uwlj+I2LE4VFFzeNipTD4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpForEmployer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForEmployer\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employer/SignUpForEmployer.js"],"names":["Formik","Form","useField","Yup","useNavigate","axios","React","useState","useEffect","SignUpForEmployer","navigate","user","setUser","MyTextInput","label","props","field","meta","id","name","touched","error","handleLogout","localStorage","clear","getUserID","loggedInUser","getItem","console","log","companytName","password","phone","address","object","companyName","string","max","required"],"mappings":"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","sourcesContent":["import { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../style/SignUp.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function SignUpForEmployer() {\n  let navigate = useNavigate();\n  const [user, setUser] = useState();\n  const MyTextInput = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return (\n      <div class=\"d-flex flex-row align-items-center mb-4\">\n        <div class=\"form-outline flex-fill mb-0\">\n          <label class=\"form-label\" htmlFor={props.id || props.name}>\n            {label}\n          </label>\n          <input\n            className=\"text-input\"\n            class=\"form-control\"\n            {...field}\n            {...props}\n          />\n          {meta.touched && meta.error ? (\n            <div className=\"error\">{meta.error}</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  };\n  const handleLogout = () => {\n    // setUser({});\n    // setUsername(\"\");\n    // setPassword(\"\");\n    localStorage.clear();\n    navigate(\"/\");\n  };\n\n  useEffect(() => getUserID(), []);\n  const getUserID = async () => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    console.log(\"User id... :\" + loggedInUser);\n  };\n  return (\n    <div className=\"screen\">\n      <section class=\"vh-100\">\n        <div class=\"container h-100\">\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-lg-12 col-xl-11\">\n              <div class=\"card text-black\">\n                <div class=\"card-body p-md-3\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                      <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                        Sign up for employer\n                      </p>\n                      <Formik\n                        class=\"mx-1 mx-md-4\"\n                        initialValues={{\n                          companytName: \"\",\n                          password: \"\",\n\n                          phone: \"\",\n                          address: \"\",\n                        }}\n                        // Check validation of each attribute\n                        validationSchema={Yup.object({\n                          companyName: Yup.string()\n                            .max(30, \"Must be 30 characters or less\")\n                            .required(\"Required\"),\n                          phone: Yup.string()\n                            .max(25, \"Must be 25 characters or less\")\n                            .required(\"Required\"),\n                          password: Yup.string().required(\"Required\"),\n\n                          address: Yup.string()\n                            .max(100, \"Must be 100 characters or less\")\n                            .required(\"Required\"),\n                        })}\n                      >\n                        <Form>\n                          <MyTextInput\n                            label=\"Phone\"\n                            name=\"phone\"\n                            type=\"string\"\n                            placeholder=\"090123123\"\n                          />\n                          <MyTextInput\n                            label=\"Password\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"*********\"\n                          />\n                          <MyTextInput\n                            label=\"Company Name\"\n                            name=\"companyName\"\n                            type=\"text\"\n                            placeholder=\"KMS Technology\"\n                          />\n\n                          <MyTextInput\n                            label=\"Address\"\n                            name=\"address\"\n                            type=\"text\"\n                            placeholder=\"A1 Nguyen Van Troi Street, Dictrict 3, HCM City\"\n                          />\n\n                          <button type=\"submit\" className=\"signupbutton\">\n                            Sign up\n                          </button>\n\n                          <p className=\"bottom\">\n                            <p class=\" text-muted\">\n                              Already have account ?{\" \"}\n                              <a\n                                href=\"\"\n                                class=\"button\"\n                                onClick={() => {\n                                  navigate(\"/\");\n                                }}\n                              >\n                                Sign in\n                              </a>\n                            </p>\n                          </p>\n                        </Form>\n                      </Formik>\n                    </div>\n                    <button onClick={handleLogout}>logout</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}