{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employee/SubJobForEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport HeaderForEmployee from \"./HeaderForEmployee\"; // render products data when we search or sort products or do nothing(display all products)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderData = (job, navigate) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"row g-1 \",\n    children: job.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-deck card p-3\",\n        style: {\n          height: 210\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: [\"Title: \", job.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: [\"Salary: \", job.salaryRange]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: [\"Specialization: \", job.specialization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: [\"Description: \", job.description, /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              style: {\n                textAlign: \"start\"\n              },\n              children: [\"Level: \", job.level, /*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                style: {\n                  textAlign: \"start\"\n                },\n                children: [\"Location: \", job.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function SubJobForEmployee() {\n  _s();\n\n  // Invoke when user click to request another page.\n  const [pageCount, setpageCount] = useState(1);\n  const [currentPage, setcurrentPage] = useState(0);\n  const [data, setData] = useState([]);\n  const [job, setJob] = useState([]);\n  const [field, setField] = useState(\"\");\n  const [sortType, setsortType] = useState(\"\");\n  const [status, setStatus] = useState(\"idle\");\n  const isIdle = status === \"idle\";\n  const isSort = status === \"sort\";\n  var newArray = [];\n  let {\n    id\n  } = useParams();\n  const endPoint = `https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/?currentPage=${currentPage}&subcategory_id=${id}`;\n  const endPoint1 = `https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/?subcategory_id=${id}&totalproducts`;\n  let limit = 4;\n  let navigate = useNavigate();\n  useEffect(() => {\n    console.log(id); // Set the list of all products\n\n    fetch(`http://localhost:8080/job/category/` + id).then(response => response.json()).then(data => {\n      setData(data);\n\n      for (let i = 0; i < data.length; i++) {\n        newArray = newArray.concat(data[i]);\n        console.log(i);\n      }\n\n      setJob(newArray);\n      console.log(job);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \".container-fluid\",\n    style: {\n      paddingLeft: 20,\n      paddingRight: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HeaderForEmployee, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 20\n        },\n        children: job !== null && job !== void 0 && job.length ? renderData(job, navigate) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubJobForEmployee, \"NV/VNlyC6nXDz8dX17w35Agb1p0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = SubJobForEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubJobForEmployee\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employee/SubJobForEmployee.js"],"names":["React","useState","useEffect","useParams","useNavigate","HeaderForEmployee","renderData","job","navigate","map","height","textAlign","title","salaryRange","specialization","description","level","location","id","SubJobForEmployee","pageCount","setpageCount","currentPage","setcurrentPage","data","setData","setJob","field","setField","sortType","setsortType","status","setStatus","isIdle","isSort","newArray","endPoint","endPoint1","limit","console","log","fetch","then","response","json","i","length","concat","paddingLeft","paddingRight","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport HeaderForEmployee from \"./HeaderForEmployee\";\n\n// render products data when we search or sort products or do nothing(display all products)\nconst renderData = (job, navigate) => {\n  return (\n    <div class=\"row g-1 \">\n      {job.map((job) => (\n        <div class=\"col-md-3\">\n          <div\n            class=\"card-deck card p-3\"\n            style={{ height: 210 }}\n            key={job.id}\n            // onClick={() => {\n            //   navigate(\"/product/\" + product.product_id);\n            // }}\n          >\n            <div class=\"card-body\">\n              <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                Title: {job.title}\n              </h5>\n              <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                Salary: {job.salaryRange}\n              </h5>\n              <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                Specialization: {job.specialization}\n              </h5>\n              <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                Description: {job.description}\n                <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                  Level: {job.level}\n                  <h5 class=\"card-title\" style={{ textAlign: \"start\" }}>\n                    Location: {job.location}\n                  </h5>\n                </h5>\n              </h5>\n            </div>\n          </div>{\" \"}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default function SubJobForEmployee() {\n  // Invoke when user click to request another page.\n  const [pageCount, setpageCount] = useState(1);\n  const [currentPage, setcurrentPage] = useState(0);\n  const [data, setData] = useState([]);\n  const [job, setJob] = useState([]);\n  const [field, setField] = useState(\"\");\n  const [sortType, setsortType] = useState(\"\");\n  const [status, setStatus] = useState(\"idle\");\n  const isIdle = status === \"idle\";\n  const isSort = status === \"sort\";\n  var newArray = [];\n  let { id } = useParams();\n  const endPoint = `https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/?currentPage=${currentPage}&subcategory_id=${id}`;\n  const endPoint1 = `https://mlr4fsfb80.execute-api.ap-southeast-1.amazonaws.com/default/managerds/products/?subcategory_id=${id}&totalproducts`;\n  let limit = 4;\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(id);\n    // Set the list of all products\n    fetch(`http://localhost:8080/job/category/` + id)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        for (let i = 0; i < data.length; i++) {\n          newArray = newArray.concat(data[i]);\n          console.log(i);\n        }\n        setJob(newArray);\n        console.log(job);\n      });\n  }, []);\n  return (\n    <div\n      className=\".container-fluid\"\n      style={{ paddingLeft: 20, paddingRight: 10 }}\n    >\n      <div>\n        <HeaderForEmployee />{\" \"}\n      </div>\n      <div style={{ paddingTop: 20 }}>\n        <div style={{ paddingTop: 20 }}>\n          {job?.length ? renderData(job, navigate) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}