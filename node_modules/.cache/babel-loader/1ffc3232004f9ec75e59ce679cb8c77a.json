{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employee/SignUpForEmployee.js\",\n    _s2 = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../style/SignUp.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForEmployee() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let navigate = useNavigate();\n  const [employee, setEmployee] = useState();\n\n  async function handleSubmit(phone, password, age, fullName, specialization, qualification, yearofexperience) {\n    // const employee = {\n    //   phone,\n    //   password,\n    //   age,\n    //   fullName,\n    //   specialization,\n    //   qualification,\n    //   yearofexperience,\n    // };\n    fetch(\"http://localhost:8080/employee\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        phone: phone,\n        password: password,\n        fullName: fullName,\n        age: age,\n        specialization: specialization,\n        qualification: qualification,\n        yearofexperience: yearofexperience\n      })\n    }).then(data => console.log(data + \"post...\")); // const response = await axios.post(\"http://localhost:8080/employee\");\n    // setEmployee(response.data);\n    // console.log(response.data);\n\n    navigate(\"/\");\n  }\n\n  const MyTextInput = _ref => {\n    _s();\n\n    let {\n      label,\n      ...props\n    } = _ref;\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex flex-row align-items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-outline flex-fill mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-label\",\n          htmlFor: props.id || props.name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          class: \"form-control\",\n          ...field,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row d-flex justify-content-center align-items-center h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-12 col-xl-11\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card text-black\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body p-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"row justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\",\n                      children: \"Sign up for employee\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                      class: \"mx-1 mx-md-4\",\n                      initialValues: {\n                        fullName: \"\",\n                        password: \"\",\n                        age: 0,\n                        phone: \"\",\n                        specialization: \"\",\n                        qualification: \"\",\n                        yearofexperience: 0\n                      } // Check validation of each attribute\n                      ,\n                      validationSchema: Yup.object({\n                        fullName: Yup.string().max(30, \"Must be 30 characters or less\").required(\"Required\"),\n                        phone: Yup.string().max(25, \"Must be 25 characters or less\").required(\"Required\"),\n                        password: Yup.string().required(\"Required\"),\n                        age: Yup.string().required(\"Required\").min(0, \"At least 10\"),\n                        specialization: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\"),\n                        qualification: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\"),\n                        yearofexperience: Yup.number().min(0, \"Must be 0 characters or more\").required(\"Required\")\n                      }),\n                      onSubmit: values => {\n                        handleSubmit(values.phone, values.password, values.fullName, values.age, values.specialization, values.qualification, values.yearofexperience);\n                        console.log(values);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Phone\",\n                          name: \"phone\",\n                          type: \"string\",\n                          placeholder: \"090123123\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Password\",\n                          name: \"password\",\n                          type: \"password\",\n                          placeholder: \"*********\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Full Name\",\n                          name: \"fullName\",\n                          type: \"text\",\n                          placeholder: \"Nguyen Tuan Anh\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Age\",\n                          name: \"age\",\n                          type: \"number\",\n                          placeholder: \"18\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Specialization\",\n                          name: \"specialization\",\n                          type: \"text\",\n                          placeholder: \"Software Engineering\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Qualification\",\n                          name: \"qualification\",\n                          type: \"text\",\n                          placeholder: \"Software Engineering Bachelor Degree\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n                          label: \"Year(s) of experience\",\n                          name: \"yearofexperience\",\n                          type: \"number\",\n                          placeholder: \"2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                          label: \"Role\",\n                          name: \"role\",\n                          type: \"text\",\n                          values: \"employee\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"submit\",\n                          className: \"signupbutton\",\n                          children: \"Sign up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"bottom\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            class: \" text-muted\",\n                            children: [\"Already have account ?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"\",\n                              class: \"button\",\n                              onClick: () => {\n                                navigate(\"/\");\n                              },\n                              children: \"Sign in\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SignUpForEmployee, \"aFJubpUrIeVAfWbAQrm6gJA3m8U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpForEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForEmployee\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/employee/SignUpForEmployee.js"],"names":["Formik","Form","useField","Yup","useNavigate","axios","React","useState","useEffect","SignUpForEmployee","navigate","employee","setEmployee","handleSubmit","phone","password","age","fullName","specialization","qualification","yearofexperience","fetch","method","headers","body","JSON","stringify","then","data","console","log","MyTextInput","label","props","field","meta","id","name","touched","error","object","string","max","required","min","number","values"],"mappings":"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","sourcesContent":["import { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../style/SignUp.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function SignUpForEmployee() {\n  let navigate = useNavigate();\n  const [employee, setEmployee] = useState();\n  async function handleSubmit(\n    phone,\n    password,\n    age,\n    fullName,\n    specialization,\n    qualification,\n    yearofexperience\n  ) {\n    // const employee = {\n    //   phone,\n    //   password,\n    //   age,\n    //   fullName,\n    //   specialization,\n    //   qualification,\n    //   yearofexperience,\n    // };\n\n    fetch(\"http://localhost:8080/employee\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        phone: phone,\n        password: password,\n        fullName: fullName,\n        age: age,\n        specialization: specialization,\n        qualification: qualification,\n        yearofexperience: yearofexperience,\n      }),\n    }).then((data) => console.log(data + \"post...\"));\n    // const response = await axios.post(\"http://localhost:8080/employee\");\n\n    // setEmployee(response.data);\n\n    // console.log(response.data);\n    navigate(\"/\");\n  }\n\n  const MyTextInput = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return (\n      <div class=\"d-flex flex-row align-items-center mb-4\">\n        <div class=\"form-outline flex-fill mb-0\">\n          <label class=\"form-label\" htmlFor={props.id || props.name}>\n            {label}\n          </label>\n          <input\n            className=\"text-input\"\n            class=\"form-control\"\n            {...field}\n            {...props}\n          />\n          {meta.touched && meta.error ? (\n            <div className=\"error\">{meta.error}</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"screen\">\n      <section class=\"vh-100\">\n        <div class=\"container h-100\">\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-lg-12 col-xl-11\">\n              <div class=\"card text-black\">\n                <div class=\"card-body p-md-3\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                      <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                        Sign up for employee\n                      </p>\n                      <Formik\n                        class=\"mx-1 mx-md-4\"\n                        initialValues={{\n                          fullName: \"\",\n                          password: \"\",\n                          age: 0,\n                          phone: \"\",\n                          specialization: \"\",\n                          qualification: \"\",\n                          yearofexperience: 0,\n                        }}\n                        // Check validation of each attribute\n                        validationSchema={Yup.object({\n                          fullName: Yup.string()\n                            .max(30, \"Must be 30 characters or less\")\n                            .required(\"Required\"),\n                          phone: Yup.string()\n                            .max(25, \"Must be 25 characters or less\")\n                            .required(\"Required\"),\n                          password: Yup.string().required(\"Required\"),\n                          age: Yup.string()\n                            .required(\"Required\")\n                            .min(0, \"At least 10\"),\n                          specialization: Yup.string()\n                            .max(100, \"Must be 100 characters or less\")\n                            .required(\"Required\"),\n                          qualification: Yup.string()\n                            .max(100, \"Must be 100 characters or less\")\n                            .required(\"Required\"),\n                          yearofexperience: Yup.number()\n                            .min(0, \"Must be 0 characters or more\")\n                            .required(\"Required\"),\n                        })}\n                        onSubmit={(values) => {\n                          handleSubmit(\n                            values.phone,\n                            values.password,\n                            values.fullName,\n                            values.age,\n                            values.specialization,\n                            values.qualification,\n                            values.yearofexperience\n                          );\n                          console.log(values);\n                        }}\n                      >\n                        <Form>\n                          <MyTextInput\n                            label=\"Phone\"\n                            name=\"phone\"\n                            type=\"string\"\n                            placeholder=\"090123123\"\n                          />\n                          <MyTextInput\n                            label=\"Password\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"*********\"\n                          />\n                          <MyTextInput\n                            label=\"Full Name\"\n                            name=\"fullName\"\n                            type=\"text\"\n                            placeholder=\"Nguyen Tuan Anh\"\n                          />\n                          <MyTextInput\n                            label=\"Age\"\n                            name=\"age\"\n                            type=\"number\"\n                            placeholder=\"18\"\n                          />\n\n                          <MyTextInput\n                            label=\"Specialization\"\n                            name=\"specialization\"\n                            type=\"text\"\n                            placeholder=\"Software Engineering\"\n                          />\n\n                          <MyTextInput\n                            label=\"Qualification\"\n                            name=\"qualification\"\n                            type=\"text\"\n                            placeholder=\"Software Engineering Bachelor Degree\"\n                          />\n\n                          <MyTextInput\n                            label=\"Year(s) of experience\"\n                            name=\"yearofexperience\"\n                            type=\"number\"\n                            placeholder=\"2\"\n                          />\n\n                          <a\n                            label=\"Role\"\n                            name=\"role\"\n                            type=\"text\"\n                            values=\"employee\"\n                          />\n\n                          <button type=\"submit\" className=\"signupbutton\">\n                            Sign up\n                          </button>\n\n                          <p className=\"bottom\">\n                            <p class=\" text-muted\">\n                              Already have account ?{\" \"}\n                              <a\n                                href=\"\"\n                                class=\"button\"\n                                onClick={() => {\n                                  navigate(\"/\");\n                                }}\n                              >\n                                Sign in\n                              </a>\n                            </p>\n                          </p>\n                        </Form>\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}