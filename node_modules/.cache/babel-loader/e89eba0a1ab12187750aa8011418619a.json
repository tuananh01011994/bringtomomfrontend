{"ast":null,"code":"var _jsxFileName = \"/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../style/SignIn.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  let navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n\n  const handleSubmit = async e => {\n    const user = {\n      username,\n      password\n    }; // send the username and password to the server\n\n    const response = await axios.get(\"http://8080/useraccounts/\"); // set the state of the user\n\n    setUser(response.data); // store the user in localStorage\n\n    localStorage.setItem(\"user\", response.data);\n    console.log(response.data);\n  }; // if there's a user show the message below\n\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" is loggged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  } // if there's no user, show the login form\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      placeholder: \"enter a username\",\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setUsername(target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"enter a password\",\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"AlBhG2YCBh8rto6H26Y9lY/CZVo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/tuananh/Documents/GitHub/LabTest2_Arch/my-app/src/components/SignIn.js"],"names":["Formik","Form","useField","Yup","useNavigate","axios","React","useState","SignIn","navigate","username","setUsername","password","setPassword","user","setUser","handleSubmit","e","response","get","data","localStorage","setItem","console","log","name","target","value"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,QAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,qBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,UAAMH,IAAI,GAAG;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAb,CADgC,CAEhC;;AACA,UAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,2BAAV,CAAvB,CAHgC,CAIhC;;AACAJ,IAAAA,OAAO,CAACG,QAAQ,CAACE,IAAV,CAAP,CALgC,CAMhC;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,QAAQ,CAACE,IAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACE,IAArB;AACD,GATD,CAN+B,CAiB/B;;;AACA,MAAIN,IAAJ,EAAU;AACR,wBAAO;AAAA,iBAAMA,IAAI,CAACW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GApB8B,CAsB/B;;;AACA,sBACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEN,QAFT;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,QAAQ,EAAE;AAAA,YAAC;AAAEgB,UAAAA;AAAF,SAAD;AAAA,eAAgBf,WAAW,CAACe,MAAM,CAACC,KAAR,CAA3B;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAEf,QAFT;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,QAAQ,EAAE;AAAA,cAAC;AAAEc,YAAAA;AAAF,WAAD;AAAA,iBAAgBb,WAAW,CAACa,MAAM,CAACC,KAAR,CAA3B;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAiBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA5CuBnB,M;UACPJ,W;;;KADOI,M","sourcesContent":["import { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../style/SignIn.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\n\nexport default function SignIn() {\n  let navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n\n  const handleSubmit = async (e) => {\n    const user = { username, password };\n    // send the username and password to the server\n    const response = await axios.get(\"http://8080/useraccounts/\");\n    // set the state of the user\n    setUser(response.data);\n    // store the user in localStorage\n    localStorage.setItem(\"user\", response.data);\n    console.log(response.data);\n  };\n\n  // if there's a user show the message below\n  if (user) {\n    return <div>{user.name} is loggged in</div>;\n  }\n\n  // if there's no user, show the login form\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"username\">Username: </label>\n      <input\n        type=\"text\"\n        value={username}\n        placeholder=\"enter a username\"\n        onChange={({ target }) => setUsername(target.value)}\n      />\n      <div>\n        <label htmlFor=\"password\">password: </label>\n        <input\n          type=\"password\"\n          value={password}\n          placeholder=\"enter a password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}